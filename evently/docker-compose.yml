version: '3.4'

services:
  evently.api:
    image: ${DOCKER_REGISTRY-}eventlyapi
    container_name: Evently.Api
    build:
      context: .
      dockerfile: src/API/Evently.Api/Dockerfile
    ports:
      - "5000:8080"
      - "5001:8081"

  evently.database:
    image: postgres:latest
    container_name: Evently.Database
    environment:
      - POSTGRES_DB=evently
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/db:/var/lib/postgresql/data
    ports:
      - 5432:5432

  evently.identity:
    image: quay.io/keycloak/keycloak:latest
    container_name: Evently.Identity
    command: start-dev # --import-realm
    depends_on:
      - evently.database
    environment:
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://evently.database:5432/evently?currentSchema=identity
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres 
      #- KC_HOSTNAME=http://evently.identity:8080/
      - KC_HTTP_PORT=8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 15s
      timeout: 2s
      retries: 15
    volumes:
      - ./.containers/identity:/opt/keycloak/data
      - ./.files:/opt/keycloak/data/import
    ports:
      - 18080:8080

  evently.seq:
    image: datalust/seq:latest
    container_name: Evently.Seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 8081:80

  evently.redis:
    image: redis:latest
    container_name: Evently.Redis
    restart: always
    ports:
      - 6379:6379

  evently.mongo:
    image: mongo
    container_name: Evently.Mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./db_data/:/data/db/

  evently.jaeger:
     image: jaegertracing/all-in-one
     container_name: Evently.Jaeger
     ports:
       - 4317:4317
       - 4318:4318
       - 16686:16686
